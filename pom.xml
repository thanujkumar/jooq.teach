<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd ">


    <modelVersion>4.0.0</modelVersion>

    <groupId>learn.jooq</groupId>
    <artifactId>jooq.examples</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <properties>
        <!-- Compiler properties for maven -->
        <maven.compiler.target>11</maven.compiler.target>
        <maven.compiler.source>11</maven.compiler.source>
        <jvm.build.target>${maven.compiler.source}</jvm.build.target>
        <encoding>UTF-8</encoding>
        <project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>
        <project.resources.sourceEncoding>${encoding}</project.resources.sourceEncoding>

        <surefire.version>2.22.0</surefire.version>
        <!-- JUnit 5 = JUnit Platform + JUnit Jupiter (for writing tests and extensions in JUnit 5) + JUnit Vintage (for running JUnit 3 and JUnit 4 based tests) -->
        <junit5.version>5.7.2</junit5.version>
        <junit5.platform.runner.version>1.7.2</junit5.platform.runner.version>
        <!-- https://www.jooq.org/doc/latest/manual/getting-started/tutorials/jooq-in-7-steps/jooq-in-7-steps-step1/ -->
        <jooq.version>3.15.0</jooq.version>
        <!-- This is to shift between pro and community version of jooq, by default community version is used, you could pass
        -Djooq.release=org.jooq.  -Djooq.release=org.jooq.pro  -Djooq.release=org.jooq.trial-->
        <!-- https://simpleflatmapper.org/0106-getting-started-jooq.html -->
        <!-- [INACTIVE] https://github.com/arnaudroger/SimpleFlatMapper -->
        <jooq.release>org.jooq.pro-java-11</jooq.release>
        <lombok.version>1.18.20</lombok.version>

        <oracle.driver.version>21.1.0.0</oracle.driver.version>
        <springframework.version>5.3.8</springframework.version>
        <sl4j.version>1.7.25</sl4j.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <sfm.jooq.version>8.2.3</sfm.jooq.version>
        <jakarta-persistence-api.version>2.2.3</jakarta-persistence-api.version>
        <jakarta-annotation-api.version>1.3.5</jakarta-annotation-api.version>
        <jakarta-validation-api.version>2.0.2</jakarta-validation-api.version>
        <jakarta.xml.bind-api.version>2.3.3</jakarta.xml.bind-api.version>
        <jackson-databind.version>2.12.7.1</jackson-databind.version>
        <jacoco.plugin.version>0.8.7</jacoco.plugin.version>

        <reactive-streams.version>1.0.3</reactive-streams.version>

        <maven-scm-plugin.version>1.11.2</maven-scm-plugin.version>
        <flyway-maven-plugin.version>7.11.0</flyway-maven-plugin.version>
        <!-- core maven plugins and their settings via properties -->
        <maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
        <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-javadoc-plugin.version>3.3.0</maven-javadoc-plugin.version>
        <maven-dependency-plugin.version>3.2.0</maven-dependency-plugin.version>
        <maven-failsafe-plugin.version>${maven-surefire-plugin.version}</maven-failsafe-plugin.version>
        <maven-enforcer-plugin.version>3.0.0-M3</maven-enforcer-plugin.version>
        <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
        <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <maven-install-plugin.version>3.0.0-M1</maven-install-plugin.version>
        <maven-site-plugin.version>3.9.1</maven-site-plugin.version>
        <wagon-webdav-jackrabbit.version>3.4.3</wagon-webdav-jackrabbit.version>
        <maven-project-info-reports-plugin.version>3.1.2</maven-project-info-reports-plugin.version>
        <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
        <maven-war-plugin.version>3.3.1</maven-war-plugin.version>
        <war.plugin.archiveClasses>true</war.plugin.archiveClasses>
        <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
        <maven-changelog-plugin.version>2.3</maven-changelog-plugin.version>
        <appassembler-maven-plugin.version>2.1.0</appassembler-maven-plugin.version>
        <maven-pmd-plugin.version>3.14.0</maven-pmd-plugin.version>
        <spotbugs-maven-plugin.version>4.2.3</spotbugs-maven-plugin.version>
        <versions-maven-plugin.version>2.8.1</versions-maven-plugin.version>


        <db.url>jdbc:oracle:thin:@(DESCRIPTION=(SOURCE_ROUTE=YES)
            (ADDRESS=(PROTOCOL=TCP)(HOST=localhost)(PORT=1521))(CONNECT_DATA=(SERVICE_NAME=orcl)))
        </db.url>
        <db.user>jooqdata</db.user>
        <db.password>jooqdata</db.password>
        <oracle.driver>oracle.jdbc.OracleDriver</oracle.driver>

    </properties>

    <dependencies>
        <dependency>
            <groupId>${jooq.release}</groupId>
            <artifactId>jooq</artifactId>
            <version>${jooq.version}</version>
        </dependency>
        <dependency>
            <groupId>${jooq.release}</groupId>
            <artifactId>jooq-codegen</artifactId>
            <version>${jooq.version}</version>
        </dependency>
        <dependency>
            <groupId>${jooq.release}</groupId>
            <artifactId>jooq-meta</artifactId>
            <version>${jooq.version}</version>
        </dependency>
        <dependency>
            <groupId>${jooq.release}</groupId>
            <artifactId>jooq-meta-extensions</artifactId>
            <version>${jooq.version}</version>
        </dependency>


        <!-- Spring (transitive dependencies are not listed explicitly) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${springframework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${springframework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${springframework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${springframework.version}</version>
        </dependency>

        <!-- oracle driver 21c -->
        <!-- https://www.oracle.com/database/technologies/maven-central-guide.html -->
        <dependency>
            <groupId>com.oracle.database.jdbc</groupId>
            <artifactId>ojdbc11-production</artifactId>
            <version>${oracle.driver.version}</version>
            <type>pom</type>
        </dependency>
        <!-- These jars have instrumentation to support Oracle's Dynamic Monitoring Service (DMS) with limited support for java.util.logging and for production use  -->
        <dependency>
            <groupId>com.oracle.database.observability</groupId>
            <artifactId>ojdbc11-observability</artifactId>
            <version>${oracle.driver.version}</version>
            <type>pom</type>
        </dependency>

        <!--  JPA API  -->
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <version>${jakarta-persistence-api.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <version>${jakarta.xml.bind-api.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <version>${jakarta.xml.bind-api.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson-databind.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson-databind.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <version>${jakarta-annotation-api.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <version>${jakarta-validation-api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.reactivestreams</groupId>
            <artifactId>reactive-streams</artifactId>
            <version>${reactive-streams.version}</version>
        </dependency>

        <!-- simple flat mapper -->
        <dependency>
            <groupId>org.simpleflatmapper</groupId>
            <artifactId>sfm-jooq</artifactId>
            <version>${sfm.jooq.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>jooq</artifactId>
                    <groupId>org.jooq</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>

        <!-- Simple logging using sl4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${sl4j.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${sl4j.version}</version>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit5.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-runner</artifactId>
            <version>${junit5.platform.runner.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${springframework.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <!-- https://medium.com/@kasunpdh/using-the-maven-assembly-plugin-to-build-a-zip-distribution-5cbca2a3b052 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven-assembly-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>${maven-project-info-reports-plugin.version}</version>
                </plugin>

                <!-- https://examples.javacodegeeks.com/enterprise-java/maven/maven-dependency-plugin-example/ -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                </plugin>

                <!-- https://tenmilesquare.com/utilizing-maven-enforcer-plugin-to-ensure-dependency-and-version-usage/ -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                </plugin>

                <!-- https://www.baeldung.com/maven-resources-plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven-clean-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven-install-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven-site-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.wagon</groupId>
                            <artifactId>wagon-webdav-jackrabbit</artifactId>
                            <!-- https://issues.apache.org/jira/browse/MSITE-832 -->
                            <version>${wagon-webdav-jackrabbit.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <inherited>true</inherited>
                    <configuration>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                        </annotationProcessorPaths>
                        <forceJavacCompilerUse>true</forceJavacCompilerUse>
                        <source>11</source>
                        <target>11</target>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                            <manifestEntries>
                                <SCM-revision>${git.commit.id}</SCM-revision>
                                <SCM-branch>${git.branch}</SCM-branch>
                                <jenkinsBuildNumber>${jenkinsBuildNumber}</jenkinsBuildNumber>
                                <jenkinsBuildId>${jenkinsBuildId}</jenkinsBuildId>
                                <jenkinsJobName>${jenkinsJobName}</jenkinsJobName>
                                <mavenBuildTimestamp>${git.build.time}</mavenBuildTimestamp>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                    <configuration>
                        <argLine>-Duser.language=en -Duser.country=EN</argLine>
                        <reuseForks>false</reuseForks>
                    </configuration>
                    <executions>
                        <execution>
                            <id>integration-test</id>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <source>${jvm.build.target}</source>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${maven-release-plugin.version}</version>
                    <configuration>
                        <arguments>-Denforcer.skip=true</arguments>
                    </configuration>
                </plugin>

                <!-- https://www.mojohaus.org/versions-maven-plugin/ -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${versions-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>appassembler-maven-plugin</artifactId>
                    <version>${appassembler-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>


        <!-- Activated plugins by default -->
        <plugins>
            <!--  flyway plugin -->
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>${flyway-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>clean</goal>
                            <goal>migrate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <sqlMigrationSeparator>__</sqlMigrationSeparator>
                    <url>${db.url}</url>
                    <user>${db.user}</user>
                    <password>${db.password}</password>
                    <baselineOnMigrate>true</baselineOnMigrate>
                    <encoding>UTF-8</encoding>
                    <locations>
                        <location>filesystem:src/main/resources/db/migration/</location>
                    </locations>
                    <table>jooq_schema_version</table>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.oracle.database.jdbc</groupId>
                        <artifactId>ojdbc11</artifactId>
                        <version>${oracle.driver.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- Jooq schema to code generation plugin -->
            <plugin>
                <groupId>${jooq.release}</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>${jooq.version}</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <jdbc>
                        <driver>${oracle.driver}</driver>
                        <url>${db.url}</url>
                        <password>${db.password}</password>
                        <user>${db.user}</user>
                        <schema>jooqdata</schema>
                    </jdbc>
                    <generator>
                        <!-- org.jooq.codegen.KotlinGenerator, org.jooq.codegen.ScalaGenerator -->
                        <name>org.jooq.codegen.JavaGenerator</name>
                        <database>
                            <name>org.jooq.meta.oracle.OracleDatabase</name>
                            <inputSchema>jooqdata</inputSchema>
                            <recordVersionFields>VERSION</recordVersionFields>
                            <recordTimestampFields>MODIFIED_TS</recordTimestampFields>
                            <unsignedTypes>true</unsignedTypes>
                            <excludes>
                                jooq_schema.*
                            </excludes>
                        </database>
                        <generate>
                            <javaTimeTypes>true</javaTimeTypes>
                            <instanceFields>true</instanceFields>
                            <comments>true</comments>
                            <jpaVersion>${jakarta-persistence-api.version}</jpaVersion>
                            <jpaAnnotations>true</jpaAnnotations>
                            <pojosEqualsAndHashCode>true</pojosEqualsAndHashCode>
                            <pojos>true</pojos>
                            <daos>true</daos>
                            <validationAnnotations>false</validationAnnotations>
                            <springAnnotations>true</springAnnotations>
                            <fluentSetters>true</fluentSetters>
                            <generatedSerialVersionUID>HASH</generatedSerialVersionUID>
                        </generate>
                        <target>
                            <packageName>jooq.examples.generated</packageName>
                            <directory>./generated</directory>
                            <encoding>UTF-8</encoding>
                        </target>
                    </generator>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.oracle.database.jdbc</groupId>
                        <artifactId>ojdbc11</artifactId>
                        <version>${oracle.driver.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- mvn org.jacoco:jacoco-maven-plugin:0.8.2:prepare-agent clean test sonar:sonar jacoco:report -->
            <!-- mvn jacoco:prepare-agent clean test jacoco:report sonar:sonar -->
            <!-- mvn help:describe -Dplugin=org.jacoco:jacoco-maven-plugin -Ddetail -->
            <!-- https://www.eclemma.org/jacoco/trunk/index.html -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.plugin.version}</version>
                <executions>
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>post-unit-test</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>pre-integration-test</id>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>verify</phase>
                         <goals>
                             <goal>report-aggregate</goal>
                         </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- https://www.eclemma.org/jacoco/trunk/doc/report-mojo.html -->
                    <!-- systemPropertyVariables>
                        <jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile>
                    </systemPropertyVariables -->
                </configuration>
            </plugin>

        </plugins>

    </build>

</project>
